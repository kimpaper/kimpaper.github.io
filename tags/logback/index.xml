<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>logback on 기록 저장소</title>
    <link>https://kimpaper.github.io/kimpaper.github.io/tags/logback/</link>
    <description>Recent content in logback on 기록 저장소</description>
    <image>
      <url>https://kimpaper.github.io/kimpaper.github.io/papermod-cover.png</url>
      <link>https://kimpaper.github.io/kimpaper.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Oct 2015 18:13:00 +0000</lastBuildDate><atom:link href="https://kimpaper.github.io/kimpaper.github.io/tags/logback/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flume의 기본 로그를 log4j에서 logback으로 변경</title>
      <link>https://kimpaper.github.io/kimpaper.github.io/posts/centos/2015-10-30-flume-logback-sink/</link>
      <pubDate>Fri, 30 Oct 2015 18:13:00 +0000</pubDate>
      
      <guid>https://kimpaper.github.io/kimpaper.github.io/posts/centos/2015-10-30-flume-logback-sink/</guid>
      <description>flume에 logback로 로그 파일 쓰기 flume에 logback 설치 방법  (http://logback.qos.ch/download.html) 에서 logback 다운로드 한다 . (현재 v1.1.3) 압축을 풀고. logback-classic-1.1.3.jar, logback-core-1.1.3.jar 를 $FLUME_HOME/lib에 복사해 넣는다. 기존 log4j는 ./lib/slf4j-log4j12-1.6.1.jar를 ./lib/slf4j-log4j12-1.6.1.jar.back로 이름을 바꾼다. log4j를 지우는 것은 선택사항이다 (놔두면 둘다 기록 한다) logback.xml 파일을 수정해서 $FLUME_HOME/conf/logback.xml에 넣는다.  logback.xml 샘플 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  &amp;lt;?</description>
    </item>
    
    <item>
      <title>logback에서 시간 &#43; 용량 기준으로 로그파일 분할하기</title>
      <link>https://kimpaper.github.io/kimpaper.github.io/2015/10/30/logback-config/</link>
      <pubDate>Fri, 30 Oct 2015 11:18:00 +0000</pubDate>
      
      <guid>https://kimpaper.github.io/kimpaper.github.io/2015/10/30/logback-config/</guid>
      <description>logback을 이용하는 경우 오늘이 지나거나 용량이 100메가를 넘어가면 파일이 분리된다.
logback.xml 에 아래 appender 추가 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  &amp;lt;appender name=&amp;#34;debug&amp;#34; class=&amp;#34;ch.qos.logback.core.rolling.RollingFileAppender&amp;#34;&amp;gt; &amp;lt;filter class=&amp;#34;ch.qos.logback.classic.filter.ThresholdFilter&amp;#34;&amp;gt; &amp;lt;level&amp;gt;DEBUG&amp;lt;/level&amp;gt; &amp;lt;/filter&amp;gt; &amp;lt;prudent&amp;gt;false&amp;lt;/prudent&amp;gt; &amp;lt;file&amp;gt;/logs/debug.log&amp;lt;/file&amp;gt; &amp;lt;rollingPolicy class=&amp;#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&amp;#34;&amp;gt; &amp;lt;fileNamePattern&amp;gt;/logs/old/debug.%d{yyyy-MM-dd}.%i.log&amp;lt;/fileNamePattern&amp;gt; &amp;lt;timeBasedFileNamingAndTriggeringPolicy class=&amp;#34;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&amp;#34;&amp;gt; &amp;lt;maxFileSize&amp;gt;100mb&amp;lt;/maxFileSize&amp;gt; &amp;lt;/timeBasedFileNamingAndTriggeringPolicy&amp;gt; &amp;lt;maxHistory&amp;gt;30&amp;lt;/maxHistory&amp;gt; &amp;lt;/rollingPolicy&amp;gt; &amp;lt;encoder&amp;gt; &amp;lt;pattern&amp;gt;[%-5level] %d{HH:mm:ss.SSS} %logger{36} - %msg%n&amp;lt;/pattern&amp;gt; &amp;lt;/encoder&amp;gt; &amp;lt;/appender&amp;gt;    &amp;lt;maxFileSize /&amp;gt; 는 분할할 용량이다 (kb, gb도 된다) &amp;lt;maxHistory /&amp;gt; 30일 지난 로그는 오래된 순서대로 지워준다.</description>
    </item>
    
  </channel>
</rss>
